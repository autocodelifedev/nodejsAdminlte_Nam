<% paginationHelper = (paginationObj, linkPrefix, currentStatus, keyword) => {
    let totalItems = paginationObj.totalItems;
    let totalItemsPerPage = paginationObj.totalItemsPerPage;
    let totalPages = Math.ceil(totalItems/totalItemsPerPage);
    let currentPage = paginationObj.currentPage;
    let pageRanges = paginationObj.pageRanges;
    let from = (currentPage*totalItemsPerPage)-(totalItemsPerPage-1);
    let to = ((currentPage*totalItemsPerPage) > totalItems ? totalItems : currentPage*totalItemsPerPage);
    let xhtmlPagination = '';
    let link = linkPrefix +'/status/' + currentStatus;
    if (keyword !== '') link+= '?keyword=' + keyword + '&page=';
    else link += '?page=';
    if (totalPages > 1) {        
        let xhtmlStart = '<li class="page-item disabled"><a class="page-link"><i class="fas fa-angle-double-left"></i></a></li>';
        let xhtmlPrevious = '<li class="page-item disabled"><a class="page-link"><i class="fas fa-angle-left"></i></a></li>';
        let xhtmlNext = '<li class="page-item disabled"><a class="page-link"><i class="fas fa-angle-right"></i></a></li>';
        let xhtmlEnd = '<li class="page-item disabled"><a class="page-link"><i class="fas fa-angle-double-right"></i></a></li>';
        let xhtmlPages = '';
        if (currentPage > 1) {
            xhtmlStart =  `<li class="page-item"><a class="page-link" href="${link}1"><i class="fas fa-angle-double-left"></i></a></li>`
            xhtmlPrevious = `<li class="page-item"><a class="page-link" href="${link}${currentPage-1}"><i class="fas fa-angle-left"></i></a></li>`
        };
        if (currentPage < totalPages) {
            xhtmlNext = `<li class="page-item"><a class="page-link" href="${link}${currentPage+1}"><i class="fas fa-angle-right"></i></a></li>`;
            xhtmlEnd = `<li class="page-item"><a class="page-link" href="${link}${totalPages}"><i class="fas fa-angle-double-right"></i></a></li>`;
        };
        
        let middle = Math.ceil(pageRanges/2);
        let min = currentPage - middle + 1;
        let max = min + pageRanges - 1;
        
        if (min < 1) {min = 1; max = pageRanges};
        if (max > totalPages) {
            max = totalPages;
            min = ((max-middle)<1) ? min = 1 : max-middle;
        };
        for (let i = min; i <= max; i++) {
            if (i == currentPage){
                xhtmlPages += `<li class="page-item active"><a class="page-link">${i}</a>`
            } else {
                xhtmlPages += `<li class="page-item"><a class="page-link" href="${link}${i}">${i}</a>`
            }
            
        }
        
        xhtmlPagination = '<ul class="pagination pagination-sm m-0 float-right">' + xhtmlStart + xhtmlPrevious + xhtmlPages + xhtmlNext + xhtmlEnd + '</ul>';
    } else {xhtmlPagination = ''}
    

    
    

    return `<div class="panel panel-info" id="pagination">
            <div class="panel-heading">
                
                <span class="label label-warning">Total pages: ${totalPages}</span>
                <span class="label label-danger">Total items: ${totalItems}</span>
            </div>
                <br>
            <div class="panel-body">
                <div class="infor-pagination">


                    <p>Number of items on the page: <span>${totalItemsPerPage}</span></p>

                    <p>Showing <span> ${from} </span> to <span>${to}</span> of <span>${totalItems}</span> items</p>
                </div>
                <div class="ad-pagination">




                    ${xhtmlPagination}
                    


                </div>
            </div>
        </div>`;
} %>